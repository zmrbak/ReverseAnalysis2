; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30037.0 

	TITLE	C:\Users\Zmrbak\source\repos\RE038\RE038\RE038.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG34018 DB	'abcded', 0dH, 09H, 00H
?_Fake_alloc@std@@3U_Fake_allocator@1@B	ORG $+1		; std::_Fake_alloc
	ORG $+2
$SG34019 DB	'%s', 0aH, 00H
CONST	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_printf
PUBLIC	?str_trim@@YAPADPAD@Z				; str_trim
PUBLIC	_main
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
EXTRN	___acrt_iob_func:PROC
EXTRN	___stdio_common_vfprintf:PROC
EXTRN	_strlen:PROC
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_data$ = -4						; size = 4
_main	PROC
; File C:\Users\Zmrbak\source\repos\RE038\RE038\RE038.cpp
; Line 24
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 28
	push	OFFSET $SG34018
	call	?str_trim@@YAPADPAD@Z			; str_trim
	add	esp, 4
	mov	DWORD PTR _data$[ebp], eax
; Line 29
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	push	OFFSET $SG34019
	call	_printf
	add	esp, 8
; Line 30
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_str_len$1 = -8						; size = 4
_c$ = -1						; size = 1
_s$ = 8							; size = 4
?str_trim@@YAPADPAD@Z PROC				; str_trim
; File C:\Users\Zmrbak\source\repos\RE038\RE038\RE038.cpp
; Line 7
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 9
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _str_len$1[ebp], eax
	jmp	SHORT $LN4@str_trim
$LN2@str_trim:
	mov	ecx, DWORD PTR _str_len$1[ebp]
	sub	ecx, 1
	mov	DWORD PTR _str_len$1[ebp], ecx
$LN4@str_trim:
	cmp	DWORD PTR _str_len$1[ebp], 0
	jbe	SHORT $LN3@str_trim
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, DWORD PTR _str_len$1[ebp]
	mov	al, BYTE PTR [edx-1]
	mov	BYTE PTR _c$[ebp], al
	movsx	ecx, BYTE PTR _c$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@str_trim
; Line 11
	movsx	edx, BYTE PTR _c$[ebp]
	cmp	edx, 13					; 0000000dH
	je	SHORT $LN7@str_trim
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 10					; 0000000aH
	je	SHORT $LN7@str_trim
	movsx	ecx, BYTE PTR _c$[ebp]
	cmp	ecx, 9
	je	SHORT $LN7@str_trim
	movsx	edx, BYTE PTR _c$[ebp]
	cmp	edx, 32					; 00000020H
	jne	SHORT $LN5@str_trim
$LN7@str_trim:
; Line 13
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, DWORD PTR _str_len$1[ebp]
	mov	BYTE PTR [eax-1], 0
; Line 14
	jmp	SHORT $LN6@str_trim
$LN5@str_trim:
; Line 17
	jmp	SHORT $LN3@str_trim
$LN6@str_trim:
; Line 19
	jmp	SHORT $LN2@str_trim
$LN3@str_trim:
; Line 20
	mov	eax, DWORD PTR _s$[ebp]
; Line 21
	mov	esp, ebp
	pop	ebp
	ret	0
?str_trim@@YAPADPAD@Z ENDP				; str_trim
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT _printf
_TEXT	SEGMENT
__Result$ = -8						; size = 4
__ArgList$ = -4						; size = 4
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdio.h
; Line 956
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 959
	lea	eax, DWORD PTR __Format$[ebp+4]
	mov	DWORD PTR __ArgList$[ebp], eax
; Line 960
	mov	ecx, DWORD PTR __ArgList$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	push	1
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	__vfprintf_l
	add	esp, 16					; 00000010H
	mov	DWORD PTR __Result$[ebp], eax
; Line 961
	mov	DWORD PTR __ArgList$[ebp], 0
; Line 962
	mov	eax, DWORD PTR __Result$[ebp]
; Line 963
	mov	esp, ebp
	pop	ebp
	ret	0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdio.h
; Line 644
	push	ebp
	mov	ebp, esp
; Line 645
	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	mov	eax, DWORD PTR __Stream$[ebp]
	push	eax
	call	___local_stdio_printf_options
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	___stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 646
	pop	ebp
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\corecrt_stdio_config.h
; Line 90
	push	ebp
	mov	ebp, esp
; Line 92
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 93
	pop	ebp
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
