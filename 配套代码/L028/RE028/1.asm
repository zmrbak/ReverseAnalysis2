; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30037.0 

	TITLE	C:\Users\Zmrbak\source\repos\RE028\RE028\RE028.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
?_Fake_alloc@std@@3U_Fake_allocator@1@B	ORG $+1		; std::_Fake_alloc
CONST	ENDS
PUBLIC	?f@@YAXPAH0I@Z					; f
PUBLIC	?f1@@YAXPAH0I@Z					; f1
PUBLIC	_main
; Function compile flags: /Odtp
_TEXT	SEGMENT
_main	PROC
; File C:\Users\Zmrbak\source\repos\RE028\RE028\RE028.cpp
; Line 29
	push	ebp
	mov	ebp, esp
; Line 31
	xor	eax, eax
	pop	ebp
	ret	0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_cnt$ = -16						; size = 4
_x2$ = -12						; size = 4
_x1$ = -8						; size = 4
_i$1 = -4						; size = 4
_a1$ = 8						; size = 4
_a2$ = 12						; size = 4
_count$ = 16						; size = 4
?f1@@YAXPAH0I@Z PROC					; f1
; File C:\Users\Zmrbak\source\repos\RE028\RE028\RE028.cpp
; Line 15
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
; Line 16
	mov	DWORD PTR _x1$[ebp], 0
; Line 17
	mov	DWORD PTR _x2$[ebp], 0
; Line 18
	mov	eax, DWORD PTR _count$[ebp]
	xor	edx, edx
	mov	ecx, 7
	div	ecx
	mov	DWORD PTR _cnt$[ebp], eax
; Line 19
	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN4@f1
$LN2@f1:
	mov	edx, DWORD PTR _i$1[ebp]
	add	edx, 1
	mov	DWORD PTR _i$1[ebp], edx
$LN4@f1:
	mov	eax, DWORD PTR _i$1[ebp]
	cmp	eax, DWORD PTR _cnt$[ebp]
	jae	SHORT $LN1@f1
; Line 22
	mov	ecx, DWORD PTR _x1$[ebp]
	mov	edx, DWORD PTR _a1$[ebp]
	mov	eax, DWORD PTR _x2$[ebp]
	mov	esi, DWORD PTR _a2$[ebp]
	mov	eax, DWORD PTR [esi+eax*4]
	mov	DWORD PTR [edx+ecx*4], eax
; Line 23
	mov	ecx, DWORD PTR _x1$[ebp]
	add	ecx, 3
	mov	DWORD PTR _x1$[ebp], ecx
; Line 24
	mov	edx, DWORD PTR _x2$[ebp]
	add	edx, 7
	mov	DWORD PTR _x2$[ebp], edx
; Line 25
	jmp	SHORT $LN2@f1
$LN1@f1:
; Line 26
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?f1@@YAXPAH0I@Z ENDP					; f1
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_i$1 = -4						; size = 4
_a1$ = 8						; size = 4
_a2$ = 12						; size = 4
_count$ = 16						; size = 4
?f@@YAXPAH0I@Z PROC					; f
; File C:\Users\Zmrbak\source\repos\RE028\RE028\RE028.cpp
; Line 7
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
; Line 8
	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN4@f
$LN2@f:
	mov	eax, DWORD PTR _i$1[ebp]
	add	eax, 1
	mov	DWORD PTR _i$1[ebp], eax
$LN4@f:
	mov	eax, DWORD PTR _count$[ebp]
	xor	edx, edx
	mov	ecx, 7
	div	ecx
	cmp	DWORD PTR _i$1[ebp], eax
	jae	SHORT $LN1@f
; Line 10
	imul	edx, DWORD PTR _i$1[ebp], 7
	imul	eax, DWORD PTR _i$1[ebp], 3
	mov	ecx, DWORD PTR _a1$[ebp]
	mov	esi, DWORD PTR _a2$[ebp]
	mov	edx, DWORD PTR [esi+edx*4]
	mov	DWORD PTR [ecx+eax*4], edx
; Line 11
	jmp	SHORT $LN2@f
$LN1@f:
; Line 12
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?f@@YAXPAH0I@Z ENDP					; f
_TEXT	ENDS
END
