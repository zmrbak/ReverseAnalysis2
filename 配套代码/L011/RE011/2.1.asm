; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29915.0 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG33019 DB	'Hello World!', 0aH, 00H
	ORG $+2
$SG33020 DB	'%f', 0aH, 00H
$SG33021 DB	'%f', 0aH, 00H
CONST	ENDS
PUBLIC	__local_stdio_printf_options
PUBLIC	_vfprintf_l
PUBLIC	printf
PUBLIC	?f_float@@YAMMM@Z				; f_float
PUBLIC	?f_double@@YANNN@Z				; f_double
PUBLIC	?f_max@@YANNN@Z					; f_max
PUBLIC	main
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	__real@40091eb851eb851f
PUBLIC	__real@4010851eb851eb85
PUBLIC	__real@4048f5c3
PUBLIC	__real@408428f6
PUBLIC	__real@40a0dea52a12f22b
PUBLIC	__real@40a0dea540000000
EXTRN	__acrt_iob_func:PROC
EXTRN	__stdio_common_vfprintf:PROC
EXTRN	_fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vfprintf_l DD imagerel $LN4
	DD	imagerel $LN4+80
	DD	imagerel $unwind$_vfprintf_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$printf DD imagerel $LN6
	DD	imagerel $LN6+83
	DD	imagerel $unwind$printf
pdata	ENDS
pdata	SEGMENT
$pdata$main DD	imagerel $LN8
	DD	imagerel $LN8+73
	DD	imagerel $unwind$main
pdata	ENDS
;	COMDAT __real@40a0dea540000000
CONST	SEGMENT
__real@40a0dea540000000 DQ 040a0dea540000000r	; 2159.32
CONST	ENDS
;	COMDAT __real@40a0dea52a12f22b
CONST	SEGMENT
__real@40a0dea52a12f22b DQ 040a0dea52a12f22br	; 2159.32
CONST	ENDS
;	COMDAT __real@408428f6
CONST	SEGMENT
__real@408428f6 DD 0408428f6r			; 4.13
CONST	ENDS
;	COMDAT __real@4048f5c3
CONST	SEGMENT
__real@4048f5c3 DD 04048f5c3r			; 3.14
CONST	ENDS
;	COMDAT __real@4010851eb851eb85
CONST	SEGMENT
__real@4010851eb851eb85 DQ 04010851eb851eb85r	; 4.13
CONST	ENDS
;	COMDAT __real@40091eb851eb851f
CONST	SEGMENT
__real@40091eb851eb851f DQ 040091eb851eb851fr	; 3.14
CONST	ENDS
xdata	SEGMENT
$unwind$main DD	010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$printf DD 041b01H
	DD	07017521bH
	DD	030156016H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vfprintf_l DD 081401H
	DD	0a6414H
	DD	095414H
	DD	083414H
	DD	070105214H
xdata	ENDS
; Function compile flags: /Ogtpy
_TEXT	SEGMENT
main	PROC
; File C:\Users\Zmrbak\source\repos\RE011\RE011\RE011.cpp
; Line 23
$LN8:
	sub	rsp, 40					; 00000028H
; Line 24
	lea	rcx, OFFSET FLAT:$SG33019
	call	printf
; Line 27
	vmovsd	xmm1, QWORD PTR __real@40a0dea540000000
	vmovq	rdx, xmm1
	lea	rcx, OFFSET FLAT:$SG33020
	call	printf
; Line 30
	vmovsd	xmm1, QWORD PTR __real@40a0dea52a12f22b
	vmovq	rdx, xmm1
	lea	rcx, OFFSET FLAT:$SG33021
	call	printf
; Line 31
	xor	eax, eax
	add	rsp, 40					; 00000028H
	ret	0
main	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
_TEXT	SEGMENT
a$ = 8
b$ = 16
?f_max@@YANNN@Z PROC					; f_max
; File C:\Users\Zmrbak\source\repos\RE011\RE011\RE011.cpp
; Line 17
	vcmpltsd xmm2, xmm1, xmm0
	vblendvpd xmm0, xmm1, xmm0, xmm2
; Line 19
	ret	0
?f_max@@YANNN@Z ENDP					; f_max
_TEXT	ENDS
; Function compile flags: /Ogtpy
_TEXT	SEGMENT
a$ = 8
b$ = 16
?f_double@@YANNN@Z PROC					; f_double
; File C:\Users\Zmrbak\source\repos\RE011\RE011\RE011.cpp
; Line 12
	vdivsd	xmm2, xmm0, QWORD PTR __real@40091eb851eb851f
	vmulsd	xmm1, xmm1, QWORD PTR __real@4010851eb851eb85
	vaddsd	xmm2, xmm2, xmm1
	vsubsd	xmm0, xmm2, xmm0
; Line 13
	ret	0
?f_double@@YANNN@Z ENDP					; f_double
_TEXT	ENDS
; Function compile flags: /Ogtpy
_TEXT	SEGMENT
a$ = 8
b$ = 16
?f_float@@YAMMM@Z PROC					; f_float
; File C:\Users\Zmrbak\source\repos\RE011\RE011\RE011.cpp
; Line 7
	vdivss	xmm2, xmm0, DWORD PTR __real@4048f5c3
	vmulss	xmm1, xmm1, DWORD PTR __real@408428f6
	vaddss	xmm2, xmm2, xmm1
	vsubss	xmm0, xmm2, xmm0
; Line 8
	ret	0
?f_float@@YAMMM@Z ENDP					; f_float
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT printf
_TEXT	SEGMENT
_Format$ = 80
printf	PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdio.h
; Line 956
$LN6:
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+32], r9
	push	rbx
	push	rsi
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rcx
; Line 959
	lea	rsi, QWORD PTR _Format$[rsp+8]
; Line 960
	mov	ecx, 1
	call	__acrt_iob_func
	mov	rbx, rax
; Line 645
	call	__local_stdio_printf_options
	xor	r9d, r9d
	mov	QWORD PTR [rsp+32], rsi
	mov	r8, rdi
	mov	rdx, rbx
	mov	rcx, QWORD PTR [rax]
	call	__stdio_common_vfprintf
; Line 963
	add	rsp, 48					; 00000030H
	pop	rdi
	pop	rsi
	pop	rbx
	ret	0
printf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _vfprintf_l
_TEXT	SEGMENT
_Stream$ = 64
_Format$ = 72
_Locale$ = 80
_ArgList$ = 88
_vfprintf_l PROC					; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdio.h
; Line 644
$LN4:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rbx, r9
	mov	rdi, r8
	mov	rsi, rdx
	mov	rbp, rcx
; Line 645
	call	__local_stdio_printf_options
	mov	r9, rdi
	mov	QWORD PTR [rsp+32], rbx
	mov	r8, rsi
	mov	rdx, rbp
	mov	rcx, QWORD PTR [rax]
	call	__stdio_common_vfprintf
; Line 646
	mov	rbx, QWORD PTR [rsp+64]
	mov	rbp, QWORD PTR [rsp+72]
	mov	rsi, QWORD PTR [rsp+80]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
_vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __local_stdio_printf_options
_TEXT	SEGMENT
__local_stdio_printf_options PROC			; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\corecrt_stdio_config.h
; Line 92
	lea	rax, OFFSET FLAT:?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 93
	ret	0
__local_stdio_printf_options ENDP
_TEXT	ENDS
END
