; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29915.0 

	TITLE	C:\Users\Zmrbak\source\repos\RE011\RE011\RE011.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG33905 DB	'Hello World!', 0aH, 00H
	ORG $+2
$SG33906 DB	'%f', 0aH, 00H
$SG33907 DB	'%f', 0aH, 00H
CONST	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_printf
PUBLIC	?f_float@@YAMMM@Z				; f_float
PUBLIC	?f_double@@YANNN@Z				; f_double
PUBLIC	?f_max@@YANNN@Z					; f_max
PUBLIC	_main
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	__real@40091eb851eb851f
PUBLIC	__real@4010851eb851eb85
PUBLIC	__real@4048f5c3
PUBLIC	__real@405edccccccccccd
PUBLIC	__real@4080f9ae147ae148
PUBLIC	__real@408428f6
PUBLIC	__real@42f6e666
PUBLIC	__real@4407cd71
EXTRN	___acrt_iob_func:PROC
EXTRN	___stdio_common_vfprintf:PROC
EXTRN	__fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT __real@4407cd71
CONST	SEGMENT
__real@4407cd71 DD 04407cd71r			; 543.21
CONST	ENDS
;	COMDAT __real@42f6e666
CONST	SEGMENT
__real@42f6e666 DD 042f6e666r			; 123.45
CONST	ENDS
;	COMDAT __real@408428f6
CONST	SEGMENT
__real@408428f6 DD 0408428f6r			; 4.13
CONST	ENDS
;	COMDAT __real@4080f9ae147ae148
CONST	SEGMENT
__real@4080f9ae147ae148 DQ 04080f9ae147ae148r	; 543.21
CONST	ENDS
;	COMDAT __real@405edccccccccccd
CONST	SEGMENT
__real@405edccccccccccd DQ 0405edccccccccccdr	; 123.45
CONST	ENDS
;	COMDAT __real@4048f5c3
CONST	SEGMENT
__real@4048f5c3 DD 04048f5c3r			; 3.14
CONST	ENDS
;	COMDAT __real@4010851eb851eb85
CONST	SEGMENT
__real@4010851eb851eb85 DQ 04010851eb851eb85r	; 4.13
CONST	ENDS
;	COMDAT __real@40091eb851eb851f
CONST	SEGMENT
__real@40091eb851eb851f DQ 040091eb851eb851fr	; 3.14
CONST	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_b$ = -12						; size = 8
_a$ = -4						; size = 4
_main	PROC
; File C:\Users\Zmrbak\source\repos\RE011\RE011\RE011.cpp
; Line 23
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 24
	push	OFFSET $SG33905
	call	_printf
; Line 26
	vmovss	xmm0, DWORD PTR __real@4407cd71
	vmovss	DWORD PTR [esp], xmm0
	push	ecx
	vmovss	xmm0, DWORD PTR __real@42f6e666
	vmovss	DWORD PTR [esp], xmm0
	call	?f_float@@YAMMM@Z			; f_float
	add	esp, 8
	fstp	DWORD PTR _a$[ebp]
; Line 27
	vcvtss2sd xmm0, xmm0, DWORD PTR _a$[ebp]
	sub	esp, 8
	vmovsd	QWORD PTR [esp], xmm0
	push	OFFSET $SG33906
	call	_printf
; Line 29
	add	esp, 4
	vmovsd	xmm0, QWORD PTR __real@4080f9ae147ae148
	vmovsd	QWORD PTR [esp], xmm0
	sub	esp, 8
	vmovsd	xmm0, QWORD PTR __real@405edccccccccccd
	vmovsd	QWORD PTR [esp], xmm0
	call	?f_double@@YANNN@Z			; f_double
	add	esp, 16					; 00000010H
	fstp	QWORD PTR _b$[ebp]
; Line 30
	sub	esp, 8
	vmovsd	xmm0, QWORD PTR _b$[ebp]
	vmovsd	QWORD PTR [esp], xmm0
	push	OFFSET $SG33907
	call	_printf
	add	esp, 12					; 0000000cH
; Line 31
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_a$ = 8							; size = 8
_b$ = 16						; size = 8
?f_max@@YANNN@Z PROC					; f_max
; File C:\Users\Zmrbak\source\repos\RE011\RE011\RE011.cpp
; Line 16
	push	ebp
	mov	ebp, esp
; Line 17
	vmovsd	xmm0, QWORD PTR _a$[ebp]
	vcomisd	xmm0, QWORD PTR _b$[ebp]
	jbe	SHORT $LN2@f_max
	fld	QWORD PTR _a$[ebp]
	jmp	SHORT $LN1@f_max
$LN2@f_max:
; Line 18
	fld	QWORD PTR _b$[ebp]
$LN1@f_max:
; Line 19
	pop	ebp
	ret	0
?f_max@@YANNN@Z ENDP					; f_max
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv71 = -8						; size = 8
_a$ = 8							; size = 8
_b$ = 16						; size = 8
?f_double@@YANNN@Z PROC					; f_double
; File C:\Users\Zmrbak\source\repos\RE011\RE011\RE011.cpp
; Line 11
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 12
	vmovsd	xmm0, QWORD PTR _a$[ebp]
	vdivsd	xmm0, xmm0, QWORD PTR __real@40091eb851eb851f
	vmovsd	xmm1, QWORD PTR _b$[ebp]
	vmulsd	xmm1, xmm1, QWORD PTR __real@4010851eb851eb85
	vaddsd	xmm0, xmm0, xmm1
	vsubsd	xmm0, xmm0, QWORD PTR _a$[ebp]
	vmovsd	QWORD PTR tv71[ebp], xmm0
	fld	QWORD PTR tv71[ebp]
; Line 13
	mov	esp, ebp
	pop	ebp
	ret	0
?f_double@@YANNN@Z ENDP					; f_double
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv71 = -4						; size = 4
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?f_float@@YAMMM@Z PROC					; f_float
; File C:\Users\Zmrbak\source\repos\RE011\RE011\RE011.cpp
; Line 6
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 7
	vmovss	xmm0, DWORD PTR _a$[ebp]
	vdivss	xmm0, xmm0, DWORD PTR __real@4048f5c3
	vmovss	xmm1, DWORD PTR _b$[ebp]
	vmulss	xmm1, xmm1, DWORD PTR __real@408428f6
	vaddss	xmm0, xmm0, xmm1
	vsubss	xmm0, xmm0, DWORD PTR _a$[ebp]
	vmovss	DWORD PTR tv71[ebp], xmm0
	fld	DWORD PTR tv71[ebp]
; Line 8
	mov	esp, ebp
	pop	ebp
	ret	0
?f_float@@YAMMM@Z ENDP					; f_float
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT _printf
_TEXT	SEGMENT
__Result$ = -8						; size = 4
__ArgList$ = -4						; size = 4
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdio.h
; Line 956
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 959
	lea	eax, DWORD PTR __Format$[ebp+4]
	mov	DWORD PTR __ArgList$[ebp], eax
; Line 960
	mov	ecx, DWORD PTR __ArgList$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	push	1
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	__vfprintf_l
	add	esp, 16					; 00000010H
	mov	DWORD PTR __Result$[ebp], eax
; Line 961
	mov	DWORD PTR __ArgList$[ebp], 0
; Line 962
	mov	eax, DWORD PTR __Result$[ebp]
; Line 963
	mov	esp, ebp
	pop	ebp
	ret	0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdio.h
; Line 644
	push	ebp
	mov	ebp, esp
; Line 645
	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	mov	eax, DWORD PTR __Stream$[ebp]
	push	eax
	call	___local_stdio_printf_options
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	___stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 646
	pop	ebp
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\corecrt_stdio_config.h
; Line 90
	push	ebp
	mov	ebp, esp
; Line 92
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 93
	pop	ebp
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
