; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30037.0 

	TITLE	C:\Users\Zmrbak\source\repos\RE032\RE032\RE032.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG34016 DB	'%d', 0aH, 00H
$SG34017 DB	'12345', 00H
?_Fake_alloc@std@@3U_Fake_allocator@1@B	ORG $+1		; std::_Fake_alloc
	ORG $+1
$SG34018 DB	'%s', 0aH, 00H
$SG34019 DB	'%d', 0aH, 00H
$SG34020 DB	'%d', 0aH, 00H
CONST	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_printf
PUBLIC	?f2c@@YAHH@Z					; f2c
PUBLIC	_main
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
EXTRN	_atoi:PROC
EXTRN	___acrt_iob_func:PROC
EXTRN	___stdio_common_vfprintf:PROC
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
; Function compile flags: /Ogtpy
_TEXT	SEGMENT
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_main	PROC
; File C:\Users\Zmrbak\source\repos\RE032\RE032\RE032.cpp
; Line 13
	push	esi
; Line 20
	mov	esi, DWORD PTR _argv$[esp]
	push	DWORD PTR [esi+4]
	call	_atoi
; Line 9
	sub	eax, 32					; 00000020H
	lea	ecx, DWORD PTR [eax+eax*4]
	mov	eax, 954437177				; 38e38e39H
	imul	ecx
	sar	edx, 1
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
; Line 22
	push	eax
	push	OFFSET $SG34016
	call	_printf
; Line 25
	mov	ecx, DWORD PTR [esi+4]
	add	esp, 12					; 0000000cH
	mov	edx, OFFSET $SG34017
	mov	esi, ecx
	npad	5
$LL3@main:
	mov	al, BYTE PTR [edx]
	lea	edx, DWORD PTR [edx+1]
	mov	BYTE PTR [ecx], al
	lea	ecx, DWORD PTR [ecx+1]
	test	al, al
	jne	SHORT $LL3@main
; Line 26
	push	esi
	push	OFFSET $SG34018
	call	_printf
	add	esp, 8
; Line 28
	mov	ecx, esi
	mov	eax, OFFSET $SG34017
$LL9@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN10@main
	test	dl, dl
	je	SHORT $LN11@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN10@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL9@main
$LN11@main:
	xor	eax, eax
	jmp	SHORT $LN12@main
$LN10@main:
	sbb	eax, eax
	or	eax, 1
$LN12@main:
; Line 29
	push	eax
	push	OFFSET $SG34019
	call	_printf
	add	esp, 8
; Line 31
	lea	ecx, DWORD PTR [esi+1]
	npad	7
$LL13@main:
	mov	al, BYTE PTR [esi]
	inc	esi
	test	al, al
	jne	SHORT $LL13@main
	sub	esi, ecx
; Line 32
	push	esi
	push	OFFSET $SG34020
	call	_printf
	add	esp, 8
; Line 33
	xor	eax, eax
	pop	esi
	ret	0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?f2c@@YAHH@Z
_TEXT	SEGMENT
_f$ = 8							; size = 4
?f2c@@YAHH@Z PROC					; f2c, COMDAT
; File C:\Users\Zmrbak\source\repos\RE032\RE032\RE032.cpp
; Line 9
	mov	eax, DWORD PTR _f$[esp-4]
	add	eax, -32				; ffffffe0H
	lea	ecx, DWORD PTR [eax+eax*4]
	mov	eax, 954437177				; 38e38e39H
	imul	ecx
	sar	edx, 1
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
; Line 10
	ret	0
?f2c@@YAHH@Z ENDP					; f2c
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _printf
_TEXT	SEGMENT
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdio.h
; Line 956
	push	esi
; Line 960
	mov	esi, DWORD PTR __Format$[esp]
	push	1
	call	___acrt_iob_func
	add	esp, 4
; Line 645
	lea	ecx, DWORD PTR __Format$[esp+4]
	push	ecx
	push	0
	push	esi
	push	eax
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	___stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 962
	pop	esi
; Line 963
	ret	0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdio.h
; Line 645
	push	DWORD PTR __ArgList$[esp-4]
	push	DWORD PTR __Locale$[esp]
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __Stream$[esp+8]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	___stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 646
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\corecrt_stdio_config.h
; Line 92
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 93
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
