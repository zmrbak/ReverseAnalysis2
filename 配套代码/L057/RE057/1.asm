; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30037.0 

	TITLE	C:\Users\Zmrbak\source\repos\RE057\RE057\RE057.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
?_Fake_alloc@std@@3U_Fake_allocator@1@B	ORG $+1		; std::_Fake_alloc
CONST	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_printf
PUBLIC	??0MyClass@@QAE@XZ				; MyClass::MyClass
PUBLIC	??1MyClass@@QAE@XZ				; MyClass::~MyClass
PUBLIC	?f1@MyClass@@UAEXXZ				; MyClass::f1
PUBLIC	?f2@MyClass@@UAEXXZ				; MyClass::f2
PUBLIC	?f3@MyClass@@UAEXXZ				; MyClass::f3
PUBLIC	??0MyClassA@@QAE@XZ				; MyClassA::MyClassA
PUBLIC	??1MyClassA@@QAE@XZ				; MyClassA::~MyClassA
PUBLIC	?fa1@MyClassA@@UAEXXZ				; MyClassA::fa1
PUBLIC	?fa2@MyClassA@@UAEXXZ				; MyClassA::fa2
PUBLIC	?fa3@MyClassA@@UAEXXZ				; MyClassA::fa3
PUBLIC	??_GMyClassA@@QAEPAXI@Z				; MyClassA::`scalar deleting destructor'
PUBLIC	_main
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_7MyClass@@6B@				; MyClass::`vftable'
PUBLIC	??_C@_0O@HKAJINAE@f1?4?4?4?4?4?$CFd?0?$CFd?6@	; `string'
PUBLIC	??_C@_0O@MHMDOBMK@f2?4?4?4?4?4?$CFd?0?$CFd?6@	; `string'
PUBLIC	??_C@_0O@BKFFDIEP@f3?4?4?4?4?4?$CFd?0?$CFd?6@	; `string'
PUBLIC	??_7MyClassA@@6B@				; MyClassA::`vftable'
PUBLIC	??_C@_0P@HJGIMMPF@fa1?4?4?4?4?4?$CFd?0?$CFd?6@	; `string'
PUBLIC	??_C@_0P@MEKCKADL@fa2?4?4?4?4?4?$CFd?0?$CFd?6@	; `string'
PUBLIC	??_C@_0P@BJDEHJLO@fa3?4?4?4?4?4?$CFd?0?$CFd?6@	; `string'
PUBLIC	??_R4MyClass@@6B@				; MyClass::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVMyClass@@@8				; MyClass `RTTI Type Descriptor'
PUBLIC	??_R3MyClass@@8					; MyClass::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2MyClass@@8					; MyClass::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@MyClass@@8			; MyClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4MyClassA@@6B@				; MyClassA::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVMyClassA@@@8				; MyClassA `RTTI Type Descriptor'
PUBLIC	??_R3MyClassA@@8				; MyClassA::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2MyClassA@@8				; MyClassA::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@MyClassA@@8			; MyClassA::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	___acrt_iob_func:PROC
EXTRN	___stdio_common_vfprintf:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ??_R1A@?0A@EA@MyClassA@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@MyClassA@@8 DD FLAT:??_R0?AVMyClassA@@@8	; MyClassA::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3MyClassA@@8
rdata$r	ENDS
;	COMDAT ??_R2MyClassA@@8
rdata$r	SEGMENT
??_R2MyClassA@@8 DD FLAT:??_R1A@?0A@EA@MyClassA@@8	; MyClassA::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@MyClass@@8
rdata$r	ENDS
;	COMDAT ??_R3MyClassA@@8
rdata$r	SEGMENT
??_R3MyClassA@@8 DD 00H					; MyClassA::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2MyClassA@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVMyClassA@@@8
data$rs	SEGMENT
??_R0?AVMyClassA@@@8 DD FLAT:??_7type_info@@6B@		; MyClassA `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVMyClassA@@', 00H
data$rs	ENDS
;	COMDAT ??_R4MyClassA@@6B@
rdata$r	SEGMENT
??_R4MyClassA@@6B@ DD 00H				; MyClassA::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVMyClassA@@@8
	DD	FLAT:??_R3MyClassA@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@MyClass@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@MyClass@@8 DD FLAT:??_R0?AVMyClass@@@8	; MyClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3MyClass@@8
rdata$r	ENDS
;	COMDAT ??_R2MyClass@@8
rdata$r	SEGMENT
??_R2MyClass@@8 DD FLAT:??_R1A@?0A@EA@MyClass@@8	; MyClass::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3MyClass@@8
rdata$r	SEGMENT
??_R3MyClass@@8 DD 00H					; MyClass::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2MyClass@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVMyClass@@@8
data$rs	SEGMENT
??_R0?AVMyClass@@@8 DD FLAT:??_7type_info@@6B@		; MyClass `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVMyClass@@', 00H
data$rs	ENDS
;	COMDAT ??_R4MyClass@@6B@
rdata$r	SEGMENT
??_R4MyClass@@6B@ DD 00H				; MyClass::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVMyClass@@@8
	DD	FLAT:??_R3MyClass@@8
rdata$r	ENDS
;	COMDAT ??_C@_0P@BJDEHJLO@fa3?4?4?4?4?4?$CFd?0?$CFd?6@
CONST	SEGMENT
??_C@_0P@BJDEHJLO@fa3?4?4?4?4?4?$CFd?0?$CFd?6@ DB 'fa3.....%d,%d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MEKCKADL@fa2?4?4?4?4?4?$CFd?0?$CFd?6@
CONST	SEGMENT
??_C@_0P@MEKCKADL@fa2?4?4?4?4?4?$CFd?0?$CFd?6@ DB 'fa2.....%d,%d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HJGIMMPF@fa1?4?4?4?4?4?$CFd?0?$CFd?6@
CONST	SEGMENT
??_C@_0P@HJGIMMPF@fa1?4?4?4?4?4?$CFd?0?$CFd?6@ DB 'fa1.....%d,%d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_7MyClassA@@6B@
CONST	SEGMENT
??_7MyClassA@@6B@ DD FLAT:??_R4MyClassA@@6B@		; MyClassA::`vftable'
	DD	FLAT:?f1@MyClass@@UAEXXZ
	DD	FLAT:?f2@MyClass@@UAEXXZ
	DD	FLAT:?f3@MyClass@@UAEXXZ
	DD	FLAT:?fa1@MyClassA@@UAEXXZ
	DD	FLAT:?fa2@MyClassA@@UAEXXZ
	DD	FLAT:?fa3@MyClassA@@UAEXXZ
CONST	ENDS
;	COMDAT ??_C@_0O@BKFFDIEP@f3?4?4?4?4?4?$CFd?0?$CFd?6@
CONST	SEGMENT
??_C@_0O@BKFFDIEP@f3?4?4?4?4?4?$CFd?0?$CFd?6@ DB 'f3.....%d,%d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MHMDOBMK@f2?4?4?4?4?4?$CFd?0?$CFd?6@
CONST	SEGMENT
??_C@_0O@MHMDOBMK@f2?4?4?4?4?4?$CFd?0?$CFd?6@ DB 'f2.....%d,%d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HKAJINAE@f1?4?4?4?4?4?$CFd?0?$CFd?6@
CONST	SEGMENT
??_C@_0O@HKAJINAE@f1?4?4?4?4?4?$CFd?0?$CFd?6@ DB 'f1.....%d,%d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_7MyClass@@6B@
CONST	SEGMENT
??_7MyClass@@6B@ DD FLAT:??_R4MyClass@@6B@		; MyClass::`vftable'
	DD	FLAT:?f1@MyClass@@UAEXXZ
	DD	FLAT:?f2@MyClass@@UAEXXZ
	DD	FLAT:?f3@MyClass@@UAEXXZ
CONST	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv139 = -20						; size = 4
$T1 = -16						; size = 4
tv72 = -12						; size = 4
$T2 = -8						; size = 4
_a$ = -4						; size = 4
_main	PROC
; File C:\Users\Zmrbak\source\repos\RE057\RE057\RE057.cpp
; Line 69
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
; Line 70
	push	20					; 00000014H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN3@main
	mov	ecx, DWORD PTR $T2[ebp]
	call	??0MyClassA@@QAE@XZ			; MyClassA::MyClassA
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@main
$LN3@main:
	mov	DWORD PTR tv72[ebp], 0
$LN4@main:
	mov	eax, DWORD PTR tv72[ebp]
	mov	DWORD PTR _a$[ebp], eax
; Line 71
	mov	ecx, DWORD PTR _a$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
; Line 72
	mov	ecx, DWORD PTR _a$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
; Line 73
	mov	ecx, DWORD PTR _a$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
; Line 74
	mov	ecx, DWORD PTR _a$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
; Line 75
	mov	ecx, DWORD PTR _a$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
; Line 76
	mov	ecx, DWORD PTR _a$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
; Line 77
	mov	ecx, DWORD PTR _a$[ebp]
	mov	DWORD PTR $T1[ebp], ecx
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN5@main
	push	1
	mov	ecx, DWORD PTR $T1[ebp]
	call	??_GMyClassA@@QAEPAXI@Z
	mov	DWORD PTR tv139[ebp], eax
	jmp	SHORT $LN1@main
$LN5@main:
	mov	DWORD PTR tv139[ebp], 0
$LN1@main:
; Line 79
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GMyClassA@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GMyClassA@@QAEPAXI@Z PROC				; MyClassA::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MyClassA@@QAE@XZ			; MyClassA::~MyClassA
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	20					; 00000014H
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GMyClassA@@QAEPAXI@Z ENDP				; MyClassA::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?fa3@MyClassA@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?fa3@MyClassA@@UAEXXZ PROC				; MyClassA::fa3, COMDAT
; _this$ = ecx
; File C:\Users\Zmrbak\source\repos\RE057\RE057\RE057.cpp
; Line 55
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 56
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	push	OFFSET ??_C@_0P@BJDEHJLO@fa3?4?4?4?4?4?$CFd?0?$CFd?6@
	call	_printf
	add	esp, 12					; 0000000cH
; Line 57
	mov	esp, ebp
	pop	ebp
	ret	0
?fa3@MyClassA@@UAEXXZ ENDP				; MyClassA::fa3
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?fa2@MyClassA@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?fa2@MyClassA@@UAEXXZ PROC				; MyClassA::fa2, COMDAT
; _this$ = ecx
; File C:\Users\Zmrbak\source\repos\RE057\RE057\RE057.cpp
; Line 51
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 52
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	push	OFFSET ??_C@_0P@MEKCKADL@fa2?4?4?4?4?4?$CFd?0?$CFd?6@
	call	_printf
	add	esp, 12					; 0000000cH
; Line 53
	mov	esp, ebp
	pop	ebp
	ret	0
?fa2@MyClassA@@UAEXXZ ENDP				; MyClassA::fa2
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?fa1@MyClassA@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?fa1@MyClassA@@UAEXXZ PROC				; MyClassA::fa1, COMDAT
; _this$ = ecx
; File C:\Users\Zmrbak\source\repos\RE057\RE057\RE057.cpp
; Line 47
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 48
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	push	OFFSET ??_C@_0P@HJGIMMPF@fa1?4?4?4?4?4?$CFd?0?$CFd?6@
	call	_printf
	add	esp, 12					; 0000000cH
; Line 49
	mov	esp, ebp
	pop	ebp
	ret	0
?fa1@MyClassA@@UAEXXZ ENDP				; MyClassA::fa1
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1MyClassA@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1MyClassA@@QAE@XZ PROC				; MyClassA::~MyClassA, COMDAT
; _this$ = ecx
; File C:\Users\Zmrbak\source\repos\RE057\RE057\RE057.cpp
; Line 44
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7MyClassA@@6B@
; Line 45
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1MyClass@@QAE@XZ			; MyClass::~MyClass
	mov	esp, ebp
	pop	ebp
	ret	0
??1MyClassA@@QAE@XZ ENDP				; MyClassA::~MyClassA
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0MyClassA@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0MyClassA@@QAE@XZ PROC				; MyClassA::MyClassA, COMDAT
; _this$ = ecx
; File C:\Users\Zmrbak\source\repos\RE057\RE057\RE057.cpp
; Line 39
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0MyClass@@QAE@XZ			; MyClass::MyClass
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7MyClassA@@6B@
; Line 61
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 2
; Line 62
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], 22			; 00000016H
; Line 41
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0MyClassA@@QAE@XZ ENDP				; MyClassA::MyClassA
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?f3@MyClass@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?f3@MyClass@@UAEXXZ PROC				; MyClass::f3, COMDAT
; _this$ = ecx
; File C:\Users\Zmrbak\source\repos\RE057\RE057\RE057.cpp
; Line 25
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 26
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	push	OFFSET ??_C@_0O@BKFFDIEP@f3?4?4?4?4?4?$CFd?0?$CFd?6@
	call	_printf
	add	esp, 12					; 0000000cH
; Line 27
	mov	esp, ebp
	pop	ebp
	ret	0
?f3@MyClass@@UAEXXZ ENDP				; MyClass::f3
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?f2@MyClass@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?f2@MyClass@@UAEXXZ PROC				; MyClass::f2, COMDAT
; _this$ = ecx
; File C:\Users\Zmrbak\source\repos\RE057\RE057\RE057.cpp
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 22
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	push	OFFSET ??_C@_0O@MHMDOBMK@f2?4?4?4?4?4?$CFd?0?$CFd?6@
	call	_printf
	add	esp, 12					; 0000000cH
; Line 23
	mov	esp, ebp
	pop	ebp
	ret	0
?f2@MyClass@@UAEXXZ ENDP				; MyClass::f2
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?f1@MyClass@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?f1@MyClass@@UAEXXZ PROC				; MyClass::f1, COMDAT
; _this$ = ecx
; File C:\Users\Zmrbak\source\repos\RE057\RE057\RE057.cpp
; Line 17
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 18
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	push	OFFSET ??_C@_0O@HKAJINAE@f1?4?4?4?4?4?$CFd?0?$CFd?6@
	call	_printf
	add	esp, 12					; 0000000cH
; Line 19
	mov	esp, ebp
	pop	ebp
	ret	0
?f1@MyClass@@UAEXXZ ENDP				; MyClass::f1
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1MyClass@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1MyClass@@QAE@XZ PROC					; MyClass::~MyClass, COMDAT
; _this$ = ecx
; File C:\Users\Zmrbak\source\repos\RE057\RE057\RE057.cpp
; Line 13
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7MyClass@@6B@
; Line 14
	mov	esp, ebp
	pop	ebp
	ret	0
??1MyClass@@QAE@XZ ENDP					; MyClass::~MyClass
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0MyClass@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0MyClass@@QAE@XZ PROC					; MyClass::MyClass, COMDAT
; _this$ = ecx
; File C:\Users\Zmrbak\source\repos\RE057\RE057\RE057.cpp
; Line 8
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7MyClass@@6B@
; Line 31
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 1
; Line 32
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 11			; 0000000bH
; Line 10
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0MyClass@@QAE@XZ ENDP					; MyClass::MyClass
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT _printf
_TEXT	SEGMENT
__Result$ = -8						; size = 4
__ArgList$ = -4						; size = 4
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdio.h
; Line 956
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 959
	lea	eax, DWORD PTR __Format$[ebp+4]
	mov	DWORD PTR __ArgList$[ebp], eax
; Line 960
	mov	ecx, DWORD PTR __ArgList$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	push	1
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	__vfprintf_l
	add	esp, 16					; 00000010H
	mov	DWORD PTR __Result$[ebp], eax
; Line 961
	mov	DWORD PTR __ArgList$[ebp], 0
; Line 962
	mov	eax, DWORD PTR __Result$[ebp]
; Line 963
	mov	esp, ebp
	pop	ebp
	ret	0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdio.h
; Line 644
	push	ebp
	mov	ebp, esp
; Line 645
	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	mov	eax, DWORD PTR __Stream$[ebp]
	push	eax
	call	___local_stdio_printf_options
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	___stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 646
	pop	ebp
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\corecrt_stdio_config.h
; Line 90
	push	ebp
	mov	ebp, esp
; Line 92
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 93
	pop	ebp
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
