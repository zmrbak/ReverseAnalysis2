; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29915.0 

	TITLE	C:\Users\Zmrbak\source\repos\RE013\RE013\RE013.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG33924 DB	'Hello World!', 0aH, 00H
CONST	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_printf
PUBLIC	?f_max@@YAHHH@Z					; f_max
PUBLIC	?f_min@@YAIII@Z					; f_min
PUBLIC	?f_multi_s@@YAHHH@Z				; f_multi_s
PUBLIC	?f_multi_u@@YAIII@Z				; f_multi_u
PUBLIC	?f_div_s@@YAHHH@Z				; f_div_s
PUBLIC	?f_div_u@@YAIII@Z				; f_div_u
PUBLIC	?f_div_u_2@@YAIHI@Z				; f_div_u_2
PUBLIC	?f_add@@YAHHI@Z					; f_add
PUBLIC	_main
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
EXTRN	___acrt_iob_func:PROC
EXTRN	___stdio_common_vfprintf:PROC
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_main	PROC
; File C:\Users\Zmrbak\source\repos\RE013\RE013\RE013.cpp
; Line 49
	push	ebp
	mov	ebp, esp
; Line 50
	push	OFFSET $SG33924
	call	_printf
	add	esp, 4
; Line 62
	xor	eax, eax
	pop	ebp
	ret	0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?f_add@@YAHHI@Z PROC					; f_add
; File C:\Users\Zmrbak\source\repos\RE013\RE013\RE013.cpp
; Line 44
	push	ebp
	mov	ebp, esp
; Line 45
	mov	eax, DWORD PTR _a$[ebp]
	add	eax, DWORD PTR _b$[ebp]
; Line 46
	pop	ebp
	ret	0
?f_add@@YAHHI@Z ENDP					; f_add
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?f_div_u_2@@YAIHI@Z PROC				; f_div_u_2
; File C:\Users\Zmrbak\source\repos\RE013\RE013\RE013.cpp
; Line 39
	push	ebp
	mov	ebp, esp
; Line 40
	mov	eax, DWORD PTR _a$[ebp]
	xor	edx, edx
	div	DWORD PTR _b$[ebp]
; Line 41
	pop	ebp
	ret	0
?f_div_u_2@@YAIHI@Z ENDP				; f_div_u_2
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?f_div_u@@YAIII@Z PROC					; f_div_u
; File C:\Users\Zmrbak\source\repos\RE013\RE013\RE013.cpp
; Line 34
	push	ebp
	mov	ebp, esp
; Line 35
	mov	eax, DWORD PTR _a$[ebp]
	xor	edx, edx
	div	DWORD PTR _b$[ebp]
; Line 36
	pop	ebp
	ret	0
?f_div_u@@YAIII@Z ENDP					; f_div_u
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?f_div_s@@YAHHH@Z PROC					; f_div_s
; File C:\Users\Zmrbak\source\repos\RE013\RE013\RE013.cpp
; Line 29
	push	ebp
	mov	ebp, esp
; Line 30
	mov	eax, DWORD PTR _a$[ebp]
	cdq
	idiv	DWORD PTR _b$[ebp]
; Line 31
	pop	ebp
	ret	0
?f_div_s@@YAHHH@Z ENDP					; f_div_s
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?f_multi_u@@YAIII@Z PROC				; f_multi_u
; File C:\Users\Zmrbak\source\repos\RE013\RE013\RE013.cpp
; Line 24
	push	ebp
	mov	ebp, esp
; Line 25
	mov	eax, DWORD PTR _a$[ebp]
	imul	eax, DWORD PTR _b$[ebp]
; Line 26
	pop	ebp
	ret	0
?f_multi_u@@YAIII@Z ENDP				; f_multi_u
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?f_multi_s@@YAHHH@Z PROC				; f_multi_s
; File C:\Users\Zmrbak\source\repos\RE013\RE013\RE013.cpp
; Line 19
	push	ebp
	mov	ebp, esp
; Line 20
	mov	eax, DWORD PTR _a$[ebp]
	imul	eax, DWORD PTR _b$[ebp]
; Line 21
	pop	ebp
	ret	0
?f_multi_s@@YAHHH@Z ENDP				; f_multi_s
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?f_min@@YAIII@Z PROC					; f_min
; File C:\Users\Zmrbak\source\repos\RE013\RE013\RE013.cpp
; Line 13
	push	ebp
	mov	ebp, esp
; Line 14
	mov	eax, DWORD PTR _a$[ebp]
	cmp	eax, DWORD PTR _b$[ebp]
	jbe	SHORT $LN2@f_min
	mov	eax, DWORD PTR _a$[ebp]
	jmp	SHORT $LN1@f_min
$LN2@f_min:
; Line 15
	mov	eax, DWORD PTR _b$[ebp]
$LN1@f_min:
; Line 16
	pop	ebp
	ret	0
?f_min@@YAIII@Z ENDP					; f_min
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?f_max@@YAHHH@Z PROC					; f_max
; File C:\Users\Zmrbak\source\repos\RE013\RE013\RE013.cpp
; Line 7
	push	ebp
	mov	ebp, esp
; Line 8
	mov	eax, DWORD PTR _a$[ebp]
	cmp	eax, DWORD PTR _b$[ebp]
	jle	SHORT $LN2@f_max
	mov	eax, DWORD PTR _a$[ebp]
	jmp	SHORT $LN1@f_max
$LN2@f_max:
; Line 9
	mov	eax, DWORD PTR _b$[ebp]
$LN1@f_max:
; Line 10
	pop	ebp
	ret	0
?f_max@@YAHHH@Z ENDP					; f_max
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT _printf
_TEXT	SEGMENT
__Result$ = -8						; size = 4
__ArgList$ = -4						; size = 4
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdio.h
; Line 956
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 959
	lea	eax, DWORD PTR __Format$[ebp+4]
	mov	DWORD PTR __ArgList$[ebp], eax
; Line 960
	mov	ecx, DWORD PTR __ArgList$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	push	1
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	__vfprintf_l
	add	esp, 16					; 00000010H
	mov	DWORD PTR __Result$[ebp], eax
; Line 961
	mov	DWORD PTR __ArgList$[ebp], 0
; Line 962
	mov	eax, DWORD PTR __Result$[ebp]
; Line 963
	mov	esp, ebp
	pop	ebp
	ret	0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdio.h
; Line 644
	push	ebp
	mov	ebp, esp
; Line 645
	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	mov	eax, DWORD PTR __Stream$[ebp]
	push	eax
	call	___local_stdio_printf_options
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	___stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 646
	pop	ebp
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\corecrt_stdio_config.h
; Line 90
	push	ebp
	mov	ebp, esp
; Line 92
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 93
	pop	ebp
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
